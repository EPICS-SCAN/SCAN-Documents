function graph_split_data_pdf(filename)

data = fopen(filename, "r");

% Initialize empty arrays to store current dataset's time and distance values
time = [];
distance = [];

% Name of the output PDF file
outputPDF = "graph_split_output.pdf";

% Check if the output PDF already exists. If it does, delete it to start fresh.
% This prevents appending to an old file from a previous run.
if exist(outputPDF, 'file')
delete(outputPDF);
end

% Loop through each line of the file until the end is reached
while ~feof(data)
% Read the current line as a string
line = fgetl(data);

% Check if the line is a delimiter (indicating the end of one dataset)
if contains(line, "---")
    % If time and distance arrays have data, plot and save them
    if ~isempty(time) && ~isempty(distance)
        % Create a new figure (invisible to avoid popping up while running)
        fig = figure('Visible', 'off');

        % Plot the data: time on X-axis, distance on Y-axis
        plot(time, distance, 'LineWidth', 1.5);
        xlabel('Time'); % X-axis label
        ylabel('Distance'); % Y-axis label
        title('Time vs Distance (split data)'); % Title of the plot
        grid on; % Add a grid to the plot

        % Export this figure to a PDF file, appending it as a new page
        exportgraphics(fig, outputPDF, 'Append', true);

        % Close the figure to free up system memory
        close(fig);
    end

    % Reset time and distance arrays to prepare for the next dataset
    time = [];
    distance = [];

    % Skip to the next line without further processing
    continue;
end

% Replace commas with spaces in the line, so we can parse numbers easily
line = strrep(line, ",", " ");

% Convert the line (string) into a numeric array
% Expected format: two numbers per line (time and distance)
numeric = str2num(line); %#ok<ST2NM> - acceptable for small-scale parsing

% If two numeric values are found, store them in the arrays
if length(numeric) == 2
    time = [time; numeric(1)];       % Append first number to time array
    distance = [distance; numeric(2)]; % Append second number to distance array
end
end

% After the loop: check if there's any remaining data to plot
% This is important if the file doesn't end with a '---' line
if ~isempty(time) && ~isempty(distance)
% Create and plot the final figure
fig = figure('Visible', 'off');
plot(time, distance, 'LineWidth', 1.5);
xlabel('Time');
ylabel('Distance');
title('Time vs Distance (split data)');
grid on;

% Append this last figure to the PDF
exportgraphics(fig, outputPDF, 'Append', true);

% Close the figure
close(fig);
end

% Close the input file
fclose(data);
end
